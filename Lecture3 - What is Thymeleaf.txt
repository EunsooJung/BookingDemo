1. What is Thymeleaf ?
 1.1 Thymeleaf is a template engine that can serve the views of your web application in 
     both online and offline scenarios.
 1.2 It can be used without running the server side component of your web app
 	 (just open the Thymeleaf templates in a web browser)
 1.3 It is easy to use by developers and desiners
 1.4 It supports template logic (iterations, conditions, etc.) and view composition.
 1.5 Plays very well with Spring.

2. Want to learn more ?
 2.1 Visit site
  - http://www.thymelef.org/index.html
  - http://spring.io/blog/2012/10/30/spring-mvc-from-jsp-and-titiles-to-thymeleaf

3. How to implements ?
 3.1 Add Thymeleaf Dependency in pom.xml file
 3.2 Create new controller for the view named by ViewController.java (src/main/java/com/booking/) and implement
 3.3 resources/static: It folder use to css, js, and images...
 3.4 resources/templates: It folder needs to put our views that would be  rendered to the client
 3.5 Copy and paste bootstrap.css and bootstrap.min.css file in the static folder
 3.6 Create View file using the html file that named by index.html (src/main/resources/templates/)
 3.7 Define xml namespace for Thymeleaf in the index.html file
   - xmlns="http://www.w3.org/1999/xhtml" xmlns:th="http://www.thymeleaf.org
 3.8 Define bootsrap in the index.html file
   - implements on/offline mode and test
   - Add Header and footer
 3.9 Define Model for the view (ViewController.java)
   - Define model and attributes (datetime and username)
 3.10 Applying for model in the Thymeleaf templates (index.html)
   - userName and datetime
 3.11 How to applying to conditional logic in Thymeleaf
   - Add model addAttribute in the ViewController.java (mode, development)
   - Add conditional logic for the bootstrap into the index.html file 